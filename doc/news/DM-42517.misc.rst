Update all m1m3 scripts to only setup their instance of the ``MTCS`` class during the configuration stage.

This also removes the ``add_remotes`` parameter from their initialization.
Instantiation of the class is now done in the ``configure`` method.

Update ``tests/test_maintel_lasertracker_align.py`` unit tests to remove use of the ``add_remotes`` parameter and to create a dry test instance of ``MTCS`` during the initialization phase.

In ``maintel/laser_tracker/align.py``, update script to only create instance of ``MTCS`` and the ``RemoteGroup`` for the laser tracker in the configuration stage.
This also removes the need for the ``add_remotes`` parameter.

Update ``tests/test_maintel_disable_hexapod_compensation_mode.py`` to ignore order of calls in the assertion.

Update ``tests/test_auxtel_atpneumatics_checkout.py`` unit tests to remove use of the ``add_remotes`` parameter and to create a dry test instance of ``ATCS`` during the initialization phase.

Update ``tests/test_maintel_home_both_axes.py`` unit tests to remove use of the ``add_remotes`` parameter and to create a dry test instance of ``MTCS`` during the initialization phase.

In ``python/lsst/ts/standardscripts/maintel/home_both_axes.py``, update script to only create instance of ``MTCS`` in the configuration stage.
This also removes the need for the ``add_remotes`` parameter.

In ``auxtel/daytime_checkout/atpneumatics_checkout.py``, update Script to only create instance of ``ATCS`` during the configuration stage.
This also removes the need of the ``add_remotes`` parameter in the initialization.

Update unit tests for m1m3 scripts.
This basically removes the add_remotes parameter when instantiating the Scripts class and creates an instance of ``MTCS`` configured with ``DryRun`` for testing.

Update all m1m3 scripts to only setup their instance of the ``MTCS`` class during the configuration stage.
This also removes the ``add_remotes`` parameter from their initialization.
Instantiation of the class is now done in the ``configure`` method.

